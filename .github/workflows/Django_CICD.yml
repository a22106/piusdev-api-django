name: Django CI/CD

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main", "test/*" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_ENGINE: django.db.backends.postgresql
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: localhost
      DB_PORT: 5432
      DJANGO_SETTINGS_MODULE: core.settings

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Migrations
      run: |
        python manage.py migrate

    - name: Start Django Server
      run: |
        python manage.py runserver &
        sleep 5  # 서버가 완전히 시작될 때까지 대기

    - name: Run Tests
      run: |
        python -m pytest

  deploy:
    needs: build  # build 작업이 성공적으로 완료된 후에만 실행
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # main 브랜치에 push된 경우에만 배포
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: bk22106@gmail.com